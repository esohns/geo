// (c)2013 Humana Kleidersammlung GmbH

﻿
var show_overlays=false;var overlay_data;var region_overlays=[];var community_overlays=[];var overlay_polyline_options_google_basic={clickable:false,editable:false,geodesic:false,path:[],visible:false,zIndex:2};var kml_parser_options_basic={zoom:false,suppressInfoWindows:true,processStyles:false,markerOptions:site_marker_options_google_basic,polygonOptions:overlay_polyline_options_google_basic,infoWindowOptions:{disableAutoPan:false}};var kml_parser;var kml_parser_2;var map_style=[{featureType:'all',stylers:[{lightness:50}]}];var styled_map_type;var layer_fill_opacity=0.2;var pop_com_fusion_layer=null;var show_pop_com_layer=false;var pop_com_attribution_string_mik_nrw='© Ministerium für Inneres und Kommunales Nordrhein-Westfalen, IT.NRW, Düsseldorf, Wahlkreiseinteilung des Landes Nordrhein-Westfalen zur Landtagswahl am 13. Mai 2012';var pop_com_attribution_string_destatis='© Statistisches Bundesamt, Wiesbaden 2012';var pop_com_attribution_string_genesis='© Statistische Ämter des Bundes und der Länder, 2013';var pop_com_table_id_nrw='1FWZuEy2kyXe98av6XiDx4DEtta3CCQuGBmaa_Lg';var pop_com_table_id_de='1qAy7czQ3yA94fkciRkXMMEk0v-XG2-XaAhRZ-Pg';var pop_com_sort_col_name='GN';var pop_com_location_col_name='geometry';var pop_com_fill_gradient_col_name='POP';var pop_com_fill_gradient_min=4137;var pop_com_fill_gradient_max=260454;var pop_com_stroke_opacity=0.3;var pop_com_style_id=2;var fusion_table_heatmap_options={enabled:false};var fusion_table_pop_com_marker_options={};var fusion_table_pop_com_polygon_options={fillColor:'#00FF00',fillOpacity:layer_fill_opacity,strokeColor:'#000000',strokeOpacity:pop_com_stroke_opacity,strokeWeight:1};var fusion_table_pop_com_polyline_options={};var fusion_table_pop_com_style_options={markerOptions:fusion_table_pop_com_marker_options,polygonOptions:fusion_table_pop_com_polygon_options,polylineOptions:fusion_table_pop_com_polyline_options};var fusion_table_pop_com_query_options={orderBy:pop_com_sort_col_name+' DESC',select:pop_com_location_col_name};var fusion_table_layer_options={clickable:false,heatmap:fusion_table_heatmap_options,query:fusion_table_pop_com_query_options,styleId:pop_com_style_id,suppressInfoWindows:true};var show_sites_heatmap_layer=false;var sites_heatmap_gradient=['rgba(0  ,   0, 255, 0)','rgba(0  ,   0, 255, 1)','rgba(0  , 255,   0, 1)','rgba(255,   0,   0, 1)'];var sites_heatmap_layer_options={dissipating:false,gradient:sites_heatmap_gradient,opacity:layer_fill_opacity,radius:0.05}
var sites_heatmap_layer=null;var use_weighted_points=false;var overlay_polygon_options_basic={color:'#000000',width:4,opacity:1.0,closed:false,fillColor:''};function get_community(position)
{if((option_communities==false)||(community_overlays.length==0))return'';switch(querystring['map'])
{case'googlev3':var position_map=position.toProprietary('googlev3');for(var i=0;i<community_overlays[0].gpolygons.length;i++)
{if(google.maps.geometry.poly.containsLocation(position_map,community_overlays[0].gpolygons[i]))
{return community_overlays[0].gpolygons[i].title.trim();}}
break;case'openlayers':for(var i=0;i<community_overlays[0].placemarks.length;i++)
if(point_x_poly(position,community_overlays[0].placemarks[i].Polygon[0].outerBoundaryIs[0].coordinates))
return community_overlays[0].placemarks[i].name.trim();break;default:break;}
if(!!window.console)console.log('position (was: "'+
position.toString()+'") is not associated with any known community, aborting');return'';}
function toggle_sites_heatmap_layer()
{show_sites_heatmap_layer=!show_sites_heatmap_layer;if(sites_heatmap_layer!=null)
{if(show_sites_heatmap_layer)sites_heatmap_layer.setMap(map.getMap());else sites_heatmap_layer.setMap(null);}}
function toggle_overlays()
{show_overlays=!show_overlays;for(var i=0;i<region_overlays.length;i++)
{switch(querystring['map'])
{case'googlev3':if(show_overlays)kml_parser.showDocument(region_overlays[i]);else kml_parser.hideDocument(region_overlays[i]);break;case'openlayers':case'ovi':for(var i=0;i<region_overlays.length;i++)
{if(show_overlays)map.addPolyline(region_overlays[i],false);else map.removePolyline(region_overlays[i]);}
break;default:if(!!window.console)console.log('invalid map provider (was: "'+querystring['map']+'"), aborting');alert('invalid map provider (was: "'+querystring['map']+'"), aborting');break;}}}
function toggle_pop_com_layer()
{show_pop_com_layer=!show_pop_com_layer;if(pop_com_fusion_layer!=null)
{if(show_pop_com_layer)
{pop_com_fusion_layer.setMap(map.getMap());show_attribution_info(false,'overlays',pop_com_attribution_string_mik_nrw);show_attribution_info(true,'overlays',pop_com_attribution_string_genesis);}
else
{pop_com_fusion_layer.setMap(null);hide_attribution_info('overlays',pop_com_attribution_string_genesis);hide_attribution_info('overlays',pop_com_attribution_string_mik_nrw);}}}
function on_kml_after_parse_communities_cb(docs)
{community_overlays=docs;switch(querystring['map'])
{case'googlev3':for(var i=0;i<docs.length;i++)kml_parser.hideDocument(docs[i]);break;case'openlayers':case'ovi':break;default:if(!!window.console)console.log('invalid map provider (was: "'+querystring['map']+'"), aborting');alert('invalid map provider (was: "'+querystring['map']+'"), aborting');break;}}
function on_kml_after_parse_cb(docs)
{switch(querystring['map'])
{case'googlev3':for(var i=0;i<docs.length;i++)
{region_overlays.push(docs[i]);kml_parser.hideDocument(docs[i]);if(use_jquery_ui_style)jQuery('#'+overlays_toggle_button_id).button('option','disabled',false);else document.getElementById(overlays_toggle_button_id).disabled=false;}
break;case'openlayers':case'ovi':default:if(!!window.console)console.log('invalid map provider (was: "'+querystring['map']+'"), aborting');alert('invalid map provider (was: "'+querystring['map']+'"), aborting');break;}}
function on_kml_failed_parse_cb(doc)
{if(!!window.console)console.log('failed to parse overlay file, continuing');}
function on_create_placemark_cb(placemark,doc)
{var element=null;var polygon_options={};jQuery.extend(true,polygon_options,overlay_polygon_options_basic);var points=[];var position;switch(querystring['map'])
{case'openlayers':case'ovi':for(var i=0;i<placemark.Polygon[0].outerBoundaryIs[0].coordinates.length;i++)
{position=new mxn.LatLonPoint(placemark.Polygon[0].outerBoundaryIs[0].coordinates[i].lat,placemark.Polygon[0].outerBoundaryIs[0].coordinates[i].lng);points.push(position);}
element=new mxn.Polyline(points);polygon_options.color='#'+placemark.style.color.substr(2);polygon_options.width=Math.round(parseFloat(placemark.style.width));polygon_options.opacity=Math.round((parseInt(placemark.style.color.substr(1,2),16)/255)*100)/100;polygon_options.closed=placemark.style.fill;polygon_options.fillColor='#'+placemark.style.fillcolor.substr(2);element.addData(polygon_options);if(!!window.google&&!!google.maps)
{element.bounds=new google.maps.LatLngBounds();for(var i=0;i<points.length;i++)element.bounds.extend(new google.maps.LatLng(points[i].lat,points[i].lon,false));}
region_overlays.push(element);if(use_jquery_ui_style)jQuery('#'+overlays_toggle_button_id).button('option','disabled',false);else document.getElementById(overlays_toggle_button_id).disabled=false;break;case'googlev3':default:if(!!window.console)console.log('invalid map provider (was: "'+querystring['map']+'"), aborting');alert('invalid map provider (was: "'+querystring['map']+'"), aborting');break;}
return element;}
function overlay_region_jquery_data_cb(data,status,xhr)
{switch(xhr.status)
{case 200:break;default:if(!!window.console)console.log('failed to get(load_kml.php), status was: '+
status+' ('+xhr.status+'), aborting');alert('failed to get(load_kml.php), status was: '+
status+' ('+xhr.status+'), aborting');return;}
if(data===undefined)
{if(!!window.console)console.log('failed to get(load_kml.php): no data, aborting');alert('failed to get(load_kml.php): no data, aborting');return;}
kml_parser.parseKmlString(data);}
function overlay_region_data_cb(oEvent)
{var plain='';switch(this.readyState)
{case 1:case 2:case 3:return;case 4:switch(this.status)
{case 200:var compressed=((this.responseBody!==undefined)?window.getBinaryFromXHR(this.responseText,this):this.response);var zip=new JSZip(compressed);for(var entry in zip.files)
{if(zip.files[entry].name.slice(-3)!=='kml')continue;plain=zip.files[entry].data;break;}
break;default:if(!!window.console)console.log('failed to get(load_kml.php), status was: '+
this.status.toString()+', aborting');alert('failed to get(load_kml.php), status was: '+
this.status.toString()+', aborting');return;}
break;default:if(!!window.console)console.log('failed to get(load_kml.php), status was: '+
this.readyState.toString()+', aborting');alert('failed to get(load_kml.php), status was: '+
this.readyState.toString()+', aborting');break;}
if(plain==='')
{if(!!window.console)console.log('failed to get(load_kml.php): no data, aborting');alert('failed to get(load_kml.php): no data, aborting');return;}
kml_parser.parseKmlString(plain);}
function overlay_communities_jquery_data_cb(data,status,xhr)
{reset_jquery_ajax_busy_progress();switch(xhr.status)
{case 200:if(!!data)break;default:if(!!window.console)console.log('failed to get('+
overlay_data['communities']['file']+'), status was: '+
status+' ('+xhr.status.toString()+'), aborting');alert('failed to get('+
overlay_data['communities']['file']+'), status was: '+
status+' ('+xhr.status.toString()+'), aborting');return;}
kml_parser_2.parseKmlString(data);}
function overlay_communities_data_cb(oEvent)
{var plain='';switch(this.readyState)
{case 1:case 2:case 3:return;case 4:switch(this.status)
{case 200:var zip=new JSZip(this.responseText);for(var entry in zip.files)
{if(zip.files[entry].name.substr(-3)!=='kml')continue;plain=zip.files[entry].data;break;}
break;default:if(!!window.console)console.log('failed to get(load_kml.php), status was: '+
this.status.toString()+', aborting');alert('failed to get(load_kml.php), status was: '+
this.status.toString()+', aborting');return;}
break;default:if(!!window.console)console.log('failed to get(load_kml.php), status was: '+
this.readyState.toString()+', aborting');alert('failed to get(load_kml.php), status was: '+
this.readyState.toString()+', aborting');break;}
if(plain=='')
{if(!!window.console)console.log('failed to get(load_kml.php): no data, aborting');alert('failed to get(load_kml.php): no data, aborting');return;}
kml_parser_2.parseKmlString(plain);}
function overlays_data_cb(data,status,xhr)
{if((typeof(data)==='undefined')||(data.length===0))
{if(!!window.console)console.log('failed to jQuery.getJSON(overlays_2_json.php): no overlay data');return;}
overlay_data=data;}
function initialise_overlay_files()
{set_jquery_ajax_busy_progress();jQuery.getJSON(script_path+'overlays_2_json.php',{location:querystring['location']},overlays_data_cb);reset_jquery_ajax_busy_progress();kml_parser_options_basic.afterParse=on_kml_after_parse_cb;kml_parser_options_basic.failedParse=on_kml_failed_parse_cb;switch(querystring['map'])
{case'googlev3':kml_parser_options_basic.map=map.getMap();break;default:kml_parser_options_basic.afterParse=null;kml_parser_options_basic.createMarker=on_create_placemark_cb;kml_parser_options_basic.createOverlay=on_create_placemark_cb;kml_parser_options_basic.createPolygon=on_create_placemark_cb;kml_parser_options_basic.createPolyline=on_create_placemark_cb;break;}
var kml_parser_options={};jQuery.extend(true,kml_parser_options,kml_parser_options_basic);kml_parser=new geoXML3.parser(kml_parser_options);set_jquery_ajax_busy_progress(false,true);var query_params,url;for(var i=0;i<overlay_data['regions'].length;i++)
{switch(overlay_data['regions'][i]['format'])
{case'kml':jQuery.get(overlay_data['regions'][i]['file'],'',overlay_region_jquery_data_cb,'text');break;case'kmz':var xhr2_arraybuffer=((!!window.XMLHttpRequest)?new XMLHttpRequest():new ActiveXObject('Microsoft.XMLHTTP'));xhr2_arraybuffer.open('GET',overlay_data['regions'][i]['file'],true);xhr2_arraybuffer.responseType='arraybuffer';xhr2_arraybuffer.onreadystatechange=overlay_region_data_cb;xhr2_arraybuffer.send(null);break;default:if(!!window.console)console.log('invalid format (was: "'+
overlay_data['regions'][i]['format']+'), continuing');alert('invalid format (was: "'+
overlay_data['regions'][i]['format']+'), continuing');continue;}}
reset_jquery_ajax_busy_progress();if(option_communities&&!!overlay_data['communities'])
{kml_parser_2=new geoXML3.parser(kml_parser_options);kml_parser_2.options.processStyles=false;kml_parser_2.options.afterParse=on_kml_after_parse_communities_cb;kml_parser_2.options.createMarker=null;kml_parser_2.options.createOverlay=null;kml_parser_2.options.createPolygon=null;kml_parser_2.options.createPolyline=null;switch(overlay_data['communities']['format'])
{case'kml':jQuery.ajaxSetup({async:true,cache:true,error:ajax_error_cb});jQuery.get(overlay_data['communities']['file'],'',overlay_communities_jquery_data_cb,'text');break;case'kmz':var xhr=new XMLHttpRequest();xhr.open('GET',overlay_data['communities']['file'],true);if(xhr.overrideMimeType!==undefined)xhr.overrideMimeType('text/plain; charset=x-user-defined');xhr.onreadystatechange=overlay_communities_data_cb;xhr.send(null);break;default:if(!!window.console)console.log('invalid format (was: "'+overlay_data['communities']['format']+'), continuing');alert('invalid format (was: "'+overlay_data['communities']['format']+'), continuing');break;}}}
function get_pop_com_fusion_table_id()
{var fusion_table_id=-1;switch(querystring['location'])
{case'nrw':fusion_table_id=pop_com_table_id_nrw;break;case'test':default:fusion_table_id=pop_com_table_id_de;break;}
return fusion_table_id;}
function initialise_sites_heatmap_layer()
{switch(querystring['map'])
{case'googlev3':var heatmap_data=[];var heatmap_data_entry,position;for(var i=0;i<sites_active.length;i++)
{position=new google.maps.LatLng(parseFloat(sites_active[i]['LAT']),parseFloat(sites_active[i]['LON']),false);heatmap_data_entry={location:position,weight:((sites_active[i]['RANK_%']!=-1)?sites_active[i]['RANK_%']:0)};heatmap_data.push((use_weighted_points?heatmap_data_entry:position));}
if(use_weighted_points)sites_heatmap_layer_options.maxIntensity=1.0;sites_heatmap_layer=new google.maps.visualization.HeatmapLayer(sites_heatmap_layer_options);sites_heatmap_layer.setData(heatmap_data);break;default:if(!!window.console)console.log('no heatmap layer available for map provider (was: "'+
querystring['map']+'"), aborting');return false;}
return true;}
function initialise_pop_com_layer()
{switch(querystring['map'])
{case'googlev3':var fusion_table_id=get_pop_com_fusion_table_id();if(fusion_table_id===-1)
{return false;}
fusion_table_pop_com_query_options.from=fusion_table_id;pop_com_fusion_layer=new google.maps.FusionTablesLayer(fusion_table_layer_options);break;default:if(!!window.console)console.log('no population layer available for map provider (was: "'+
querystring['map']+'"), aborting');return false;}
return true;}
function inititalise_layers()
{if(initialise_sites_heatmap_layer())
{if(use_jquery_ui_style)jQuery('#'+sites_heatmap_layer_toggle_button_id).button('option','disabled',false);else document.getElementById(sites_heatmap_layer_toggle_button_id).disabled=false;}
if(initialise_pop_com_layer())
{if(use_jquery_ui_style)jQuery('#'+pop_com_layer_toggle_button_id).button('option','disabled',false);else document.getElementById(pop_com_layer_toggle_button_id).disabled=false;}}
function initialise_overlays()
{initialise_overlay_files();inititalise_layers();}